#===============================================
# BOOT SEQUENCE CONFIGURATIONS START
#===============================================
d-i debian-installer/language string en
d-i debian-installer/country string US
d-i debian-installer/locale string en_US.UTF-8
d-i console-setup/ask_detect boolean false
d-i console-setup/layoutcode string us
d-i console-setup/charmap select UTF-8

# キーボードの設定(JP)
d-i keyboard-configuration/layoutcode string jp
d-i keyboard-configuration/modelcode jp106

#
# ネットワークの設定
#

# Static IP
#d-i netcfg/use_autoconfig boolean false 
#d-i netcfg/disable_autoconfig boolean true 
# 
#d-i netcfg/choose_interface select eth0 
#d-i netcfg/disable_dhcp boolean true 
#d-i netcfg/get_nameservers string 8.8.8.8 
#d-i netcfg/get_ipaddress string 192.168.1.201 
#d-i netcfg/get_netmask string 255.255.255.0 
#d-i netcfg/get_gateway string 192.168.1.1 
#d-i netcfg/confirm_static boolean true 
#d-i netcfg/get_hostname string stack01 
#d-i netcfg/get_domain string pg1x.com 
#d-i netcfg/wireless_wep string 

# DHCP
d-i netcfg/choose_interface select eth0
d-i netcfg/disable_autoconig boolean false
d-i netcfg/get_hostname string unassigned-host
d-i netcfg/get_domain string unassigned-domain
d-i netcfg/wireless_wep string

# ここで一旦リセット
d-i preseed/run string http://gouf.github.io/configures/prescript.sh

#===============================================
# PARTMAN PARTITIONING SECTION START
#===============================================
# インストーラパッケージをダウンロードするミラーを選択
#d-i mirror/protocol http
d-i mirror/country string manual
d-i mirror/http/hostname string jp.archive.ubuntu.com
d-i mirror/http/directory string /ubuntu/
d-i mirror/http/proxy string

# インストールするスイートを選択
d-i mirror/suite saucy

# タイムゾーンの設定
d-i clock-setup/utc boolean false
d-i time/zone string Japan
d-i clock-setup/ntp boolean false

# パーティション設定
# すべてのRIAD デバイス構成を破棄
d-i partman-md/device_remove_md boolean true
# すべてのLVM デバイス構成を破棄
d-i partman-lvm/device_remove_lvm boolean true
# 自動で一番大きな空き領域を利用する
# 空き領域で利用するサイズは最大に設定
d-i partman-auto/init_automatically_partition select biggest_free
d-i partman-auto/method string regular
d-i partman-auto/disk string /dev/sda
d-i partman-auto-lvm/guided_size string max

# ディレクトリ構成の設定
# atomic : 全部のファイルをひとつのパーティションに
# home   : /home に分ける
# multi  : /home, /usr/, /var, /tmp に分ける
d-i partman-auto/choose_recipe select multi

# デフォルトファイルシステムの設定
d-i partman/default_filesystem string ext4

# 確認処理なしでパーティションを作成
d-i partman-auto/choose_recipe select root
d-i partman/confirm_write_new_label boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman/confirm boolean true

# アカウント作成
# Root アカウントの作成をスキップ(Defalt: false, スキップする)
#d-i passwd/root-login boolean false
#d-i passwd/root-password password r00tme
#d-i passwd/root-password-again password r00tme
# 通常ユーザアカウントの作成をスキップすることもできる
#d-i passwd/make-user boolean false

# Root パスワードの設定 (プレーンテキスト)
#d-i passwd/root-password password r00tme
#d-i passwd/root-password-again password r00tme
# MD5 ハッシュでの暗号化した文字列でも設定できる
#d-i passwd/root-password-crypted password [MD5 hash]

# 通常ユーザアカウントの作成
# アカウント名の設定
d-i passwd/user-fullname string Vagrant
d-i passwd/username string vagrant
# パスワードの設定
d-i passwd/user-password password vagrant
d-i passwd/user-password-again password vagrant
# MD5 ハッシュでの暗号化した文字列でも設定できる
#d-i passwd/user-password-crypted password [MD5 hash]
# デフォルト以外のUID を設定する
#d-i passwd/user-uid string 1010
# インストーラは弱いパスワードに対して警告を出すけど、
# なにをしてるか分かっていればコメントアウトする
d-i user-setup/allow-password-weak boolean true

# ユーザアカウントは標準の初期設定グループに属する。上書きするときにこの設定を使う
d-i passwd/user-default-groups string audio cdrom video

# ホームディレクトリを暗号化するか否か(true = 暗号化する)
d-i user-setup/encrypt-home boolean false

# 既存パッケージの選択
#tasksel tasksel/first multiselect ubuntu-desktop
#tasksel tasksel/first multiselect lamp-server, print-server
#tasksel tasksel/first multiselect kubuntu-desktop
tasksel tasksel/first multiselect Basic Ubuntu server

# 個別パッケージの選択
d-i pkgsel/include string sudo tree dkms vim curl wget git ssh openssh-server build-essential
d-i pkgsel/confirm boolean true

# ブートストラップ後のアップグレード
# 値：none, safe-upgrade, full-upgrade
d-i pkgsel/upgrade select safe-upgrade

# アップデートポリシーの設定
# none                : 自動アップデートしない
# unattended-upgrades : セキュリティアップデートは自動でする
# landscape           : Landscape で管理する
d-i pkgsel/update-policy select unattended-upgrades

# ランゲージパックの選択
d-i pkgsel/language-packs multiselect en, jp
d-i pkgsel/install-language-support boolean true

# ソフトウェア使用状況をレポートするか
# (プロジェクトを助けることにつながる)
popularity-contest popularity-contest/participate boolean false

# SSH Key
#d-i preseed/late_command string\
# in-target /bin/mkdir -p /home/vagrant/.ssh;\
# in-target /bin/chmod 700 /home/vagrant/.ssh;\
# in-target /usr/bin/wget https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub -O /home/vagrant/.ssh/authorized_keys;\
# in-target /bin/chmod 600 /home/vagrant/.ssh/authorized_keys;\
# in-target /bin/chown -R vagrant /home/vagrant/.ssh;\
# in-target /bin/echo "vagrant  ALL=(ALL) ALL" >> /etc/sudoers;

# システムデータベースのアップデート
# ソフトウェアをインストールするごとに実行され、すこし時間がかかる。
# もし望まないならオフにすることもできる
d-i pkgsel/updatedb boolean true

# ブートローダのインストール
d-i grub-installer/only_debian boolean true
# Grub が標準でインストールされるが、lilo をインストールする場合、スキップさせる
#d-i grub-installer/skip boolean true
# lilo のインストールもスキップしてブートローダをインストールしないなら、コメントアウトを外す
#d-i lilo-installer/skip boolean true
# インストールの完了メッセージを回避する
d-i finish-install/reboot_in_progress note

# リブートまでにディスクをイジェクトする
d-i cdrom-detect/eject boolean true

# インストール完了後、リブートではなく電源オフにする
#d-i debian-installer/exit/halt
#d-i debian-installer/exit/poweroff boolean true
